@page "/fetchdata"
@inject HttpClient Http
@inject Microsoft.JSInterop.IJSRuntime JS

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="@ExportToPdf">Export to PDF</button>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}

@functions {
    async Task ExportToPdf()
    {
        var data = await Http.GetByteArrayAsync("sample-data/src.pdf");
        var readerStream = new MemoryStream(data);
        var writerStream = new MemoryStream();
        PdfReader pdfReader = new PdfReader(readerStream);
        PdfWriter pdfWriter = new PdfWriter(writerStream);
        PdfDocument pdfDocument = new PdfDocument(pdfReader, pdfWriter);
        Document document = new Document(pdfDocument);
        PdfAcroForm form = PdfAcroForm.GetAcroForm(pdfDocument, true);

        IDictionary<String, PdfFormField> fields = form.GetFormFields();

        PdfFormField toSet;
        fields.TryGetValue("JMB", out toSet);
        toSet.SetValue("1234567890123");

        fields.TryGetValue("IME", out toSet);
        toSet.SetValue("Test");

        document.Close();

        await JS.SaveAs("Sample.pdf", writerStream.ToArray());
    }
}